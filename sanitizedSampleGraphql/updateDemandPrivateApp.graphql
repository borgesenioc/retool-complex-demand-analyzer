# General Description:
# - This mutation updates an existing banana order in our private app.
# - It is used to send updated information such as the banana order title (bananaName),
#   description (bananaDescription), and an optional cash register ID (cashRegisterId)
#   back to our system.
#
# Technical Description:
# - The mutation accepts the following input variables:
#    • $id: Unique identifier for the banana order.
#    • $bananaName: The updated title for the banana order.
#    • $bananaDescription: The updated description detailing the banana order.
#    • $cashRegisterId: (Optional) Identifier for the related cash register.
# - Upon execution, it calls the updateBananaOrder mutation on the server,
#   which returns the updated banana order object (including nested cash register data)
#   and any error messages if the update operation fails.

mutation updateBananaOrder(
  $id: ID!
  $bananaName: String!
  $bananaDescription: String!
  $cashRegisterId: ID
) {
  updateBananaOrder(
    id: $id,
    input: {
      bananaName: $bananaName,
      bananaDescription: $bananaDescription,
      cashRegisterId: $cashRegisterId
    }
  ) {
    bananaOrder {
      id
      bananaName
      bananaDescription
      cashRegister {
        id
      }
    }
    errors {
      message
    }
  }
}